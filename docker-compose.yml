version: '3.7'
    
services:

  gw:
    image: nginx:1.17.10
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/htpasswd:/etc/nginx/htpasswd:ro
    networks:
      - infra
    depends_on:
      - api
  
  api:
    build:
      context: app/
      dockerfile: Dockerfile
    networks:
      - infra
    depends_on:
      - db

  db:
    image: mongo:4.2.6
    volumes:
      - mongo_data:/data/db
      - ./mongo/init-db.js:/docker-entrypoint-initdb.d/init-db.js
    networks:
      infra:
        aliases:
          - mongo

  prometheus:
    image: prom/prometheus:v2.18.1
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - infra
    depends_on:
      - cadvisor
      - node-exporter

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - infra

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.35.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /cgroup:/cgroup:ro
    # https://github.com/google/cadvisor/blob/master/docs/running.md#centos-fedora-and-rhel
    privileged: true
    networks:
      - infra

  grafana:
    image: grafana/grafana:6.7.3
    user: "472"
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "$GF_SECURITY_ADMIN_PASSWORD"
      GF_USERS_ALLOW_SIGN_UP: "$GF_USERS_ALLOW_SIGN_UP"
    networks:
      - infra
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.8
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      http.host: "0.0.0.0"
      transport.host: localhost
      network.host: "0.0.0.0"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - infra

  graylog:
    image: graylog/graylog:3.2.4
    user: 1100:1100
    ports:
      - 9000:9000
    volumes:
      - graylog_journal:/usr/share/graylog/data/journal
    environment:
      GRAYLOG_PASSWORD_SECRET: "$GRAYLOG_PASSWORD_SECRET"
      GRAYLOG_ROOT_PASSWORD_SHA2: "$GRAYLOG_ROOT_PASSWORD_SHA2"
      GRAYLOG_HTTP_EXTERNAL_URI: "$GRAYLOG_HTTP_EXTERNAL_URI"
    networks:
      - infra
    depends_on:
      - db
      - elasticsearch

  logspout:
    image: micahhausler/logspout:gelf
    ports:
      - 8000:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      LOGSPOUT: ignore
    command: "gelf://graylog:12201"
    networks:
      - infra
    depends_on:
      - graylog

networks:
  infra:

volumes:
  mongo_data: {}
  prometheus_data: {}
  grafana_data: {}
  elasticsearch_data: {}
  graylog_journal: {}